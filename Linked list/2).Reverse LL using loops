#include<iostream>
using namespace std;

class node{
public:

    int data;
    node* next;

    node(int data)
    {
        this->data = data;
        next = NULL;
    }
};

//insertion at begining
void insertAtHead(node* &head,int data){
    if(head == NULL)
    {
        head = new node(data);
        return;
    }

    node *n = new node(data);
    n->next = head;
    head = n;
}

//print all nodes
void print(node* head)
{
    while (head!=NULL)
    {
        cout<<head->data<<" ->";
        head = head->next;
    }    
}

void reverse(node* &head)
{
    node* curr = head;
    node* prev = NULL;
    node* forwardd;
    
    while(curr != NULL)
    {
        forwardd = curr->next;
        curr->next = prev;
        
        prev = curr;
        curr = forwardd;
    }
    head = prev;
}


int main()
{
    node* head = NULL;
    insertAtHead(head,10);
    insertAtHead(head,20);
    insertAtHead(head,30);
    insertAtHead(head,40);
    insertAtHead(head,50);
    print(head);
    cout<<endl;
    
    reverse(head);
    cout<<"After reverseing";
    print(head);
}
